{"ast":null,"code":"var _jsxFileName = \"/Users/junghoonseo/Desktop/Kprogrammers/new/Kprogrammers/client/src/components/Cards.js\";\nimport React, { useState } from 'react';\nimport './Cards.css';\nimport eventData from './eventData';\nimport { Link } from 'react-router-dom';\nimport Model from '../Model';\nimport axios from \"axios\";\n\nfunction Cards() {\n  var _state$data;\n\n  const initialState = [{\n    _id: \"\",\n    title: \"\",\n    shortDesc: \"\",\n    desc: '',\n    link: ''\n  }];\n  const [model, setModel] = useState(false);\n  const [tempdata, setTempdata] = useState([]);\n  const [noOfElement, setnoOfElement] = useState(8);\n  const [filter, setFilter] = useState('');\n  const [values, setValues] = useState({\n    _id: \"\",\n    title: \"\",\n    shortDesc: \"\",\n    desc: '',\n    link: ''\n  });\n  const [eventList, seteventList] = useState();\n  const [slic, setSlic] = useState([]);\n  const [state, setState] = useState(initialState);\n\n  const getData = (img, title, shortDes, desc, link, date) => {\n    let tempData = [img, title, shortDes, desc, link, date];\n    setTempdata(item => [1, ...tempData]);\n    return setModel(true);\n  }; // let temp_event = []\n\n\n  const loadMore = () => {\n    console.log(\"temp\"); // axios.post(\"/api/find\", values)        \n    // .then(res => {            \n    //     console.log(\"cards data\")\n    //     // event_list[\"cardData\"].push(res.data)        \n    //     res.data.forEach((item, i) =>{                                     \n    //         temp_event.push(item)                \n    //     })\n    // })\n    // console.log(temp_event)\n\n    setnoOfElement(noOfElement + noOfElement);\n  };\n\n  const searchText = event => {\n    setFilter(event.target.value);\n  };\n\n  const load_event = props => {\n    console.log(\"clicked\");\n    console.log({\n      props\n    }); // {temp_().temp_event.map((item) => {                        \n    //     console.log({item})\n    //     return (<span>{item}</span>)\n    // })}\n  };\n\n  let temp_event = [];\n  var review = [];\n  var t = [];\n  var id = [];\n\n  let temp_ = () => {\n    axios.post(\"/api/find\", values).then(res => {\n      setState(res); // id = id.push(res)\n      // console.log(state)\n      // console.log(res.data)\n      // console.log(\"cards data\")                         \n      // res.data.forEach((item, i) =>{      \n      //     // console.log(item._id)                               \n      //     id = id.concat(item._id)\n      //     temp_event.push(item)     \n      //     // {temp_event.map((item)=> {                                                        \n      //     //     review = review.concat(t);\n      //     // })}\n      // })\n      //console.log(review)\n    });\n    return {\n      state\n    };\n  }; // console.log(id)\n  // console.log(temp_event)\n  // console.log(state.data)\n  // let dataSearch = eventData.cardData.filter(item=>{\n  //     return Object.keys(item).some(key=>\n  //         item[key].toString().toLowerCase().includes(filter.toString().toLowerCase())\n  //         )\n  //     });\n  // console.log(temp_event)\n  // const slice = Object.keys(temp_event).sort((a,b)=>a.label<b.label ? -1:1).slice(0,noOfElement);\n  // const slice = temp_event\n  // console.log(Object.keys(temp_event))\n  // console.log(review)\n  // console.log(t[0])\n  // console.log(temp_event  )\n  // const uniqueNames = Array.from(new Set(temp_event));\n  // console.log(uniqueNames)\n  // console.log(temp_event.filter(item => {        \n  //     return Object.keys(item).some(key=>                                        \n  //                 item[key].toString().toLowerCase()\n  //     )\n  // }    \n  // ))\n  // console.log(Object.entries(temp_event))\n  // temp_().map((item) => console.log(item));\n  // Object.keys(item).some(key=>\n  //             item[key].toString().toLowerCase().includes(filter.toString().toLowerCase())\n  // )\n  // console.log(temp_().keys[0])\n  // console.log(temp_event[0])\n  // {temp_().map(temp => {\n  //     conlos\n  // })}\n  // console.log(temp_().temp_event)\n  // console.log(temp_event.title)\n  // console.log(Object.keys(temp_event)[0])\n  // console.log(temp_event[Object.keys(temp_event)[0]])\n  // var person = temp_event\n  // var firstName = person[Object.keys(person)[0]]\n  // console.log(firstName)\n  // console.log(firstName[0])\n  // console.log(temp_event.map((item) => {\n  //     console.log('sdsd')\n  //     return item\n  // }))\n  // console.log(state.data)\n  // var data = Array.from(state.data)\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/add-event\",\n    className: \"add-event\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 29\n    }\n  }, \"Add Event\"))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, \"output\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, temp_()[0]), (_state$data = state.data) === null || _state$data === void 0 ? void 0 : _state$data.map(({\n    _id,\n    title,\n    shortDesc,\n    desc\n  }) => {\n    // <li className=\"travelcompany-input\">\n    //     <span className=\"input-label\">{title }</span>\n    // </li>\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"py-4 py-lg-5 container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-11 col-md-6 col-lg-3 mx-0 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card p-0 overflow-hidden h-100 shadow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"figure\", {\n      className: \"cards__item__pic-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://images.pexels.com/photos/20787/pexels-photo.jpg?auto=compress&cs=tinysrgb&h=350\",\n      alt: \"new\",\n      className: \"cards__item__img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 29\n      }\n    }, title), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 29\n      }\n    }, shortDesc)))));\n  }));\n}\n\nexport default Cards;","map":{"version":3,"sources":["/Users/junghoonseo/Desktop/Kprogrammers/new/Kprogrammers/client/src/components/Cards.js"],"names":["React","useState","eventData","Link","Model","axios","Cards","initialState","_id","title","shortDesc","desc","link","model","setModel","tempdata","setTempdata","noOfElement","setnoOfElement","filter","setFilter","values","setValues","eventList","seteventList","slic","setSlic","state","setState","getData","img","shortDes","date","tempData","item","loadMore","console","log","searchText","event","target","value","load_event","props","temp_event","review","t","id","temp_","post","then","res","data","map"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport './Cards.css';\nimport eventData from './eventData';\nimport { Link } from 'react-router-dom';\nimport Model from '../Model';\nimport axios from \"axios\"\n\nfunction Cards(){\n    const initialState = \n    [{_id: \"\",\n        title:\"\",\n        shortDesc: \"\",\n        desc:'',\n        link:''}]\n    const [model, setModel] = useState(false);\n    const [tempdata, setTempdata] = useState([]);\n    const [noOfElement, setnoOfElement] = useState(8);\n    const [filter, setFilter] = useState('');\n    const [values, setValues] = useState({\n        _id: \"\",\n        title:\"\",\n        shortDesc: \"\",\n        desc:'',\n        link:''\n    })\n    const [eventList, seteventList] = useState();\n    const [slic, setSlic] = useState([]);\n    const [state, setState] = useState(initialState);\n    const getData = (img,title,shortDes, desc, link, date) =>{\n        let tempData = [img,title,shortDes,desc,link ,date];\n        setTempdata(item=>[1, ...tempData]);\n        return setModel(true);\n        \n    };\n\n    // let temp_event = []\n    const loadMore = () => {\n        \n        console.log(\"temp\")\n        // axios.post(\"/api/find\", values)        \n        // .then(res => {            \n        //     console.log(\"cards data\")\n            \n        //     // event_list[\"cardData\"].push(res.data)        \n        //     res.data.forEach((item, i) =>{                                     \n        //         temp_event.push(item)                \n        //     })\n        // })\n        // console.log(temp_event)\n        setnoOfElement(noOfElement + noOfElement); \n\n        \n    }\n    \n    const searchText = (event) => {\n        setFilter(event.target.value);\n    }\n\n    const load_event= (props) => {\n        console.log(\"clicked\")\n        console.log({props})\n        // {temp_().temp_event.map((item) => {                        \n        //     console.log({item})\n        //     return (<span>{item}</span>)\n        // })}\n    }\n    \n    let temp_event = []\n    var review = []\n    var t= []\n    var id = []\n    let temp_ = () => {    \n        axios.post(\"/api/find\", values)        \n        .then(res => {            \n            setState(res)  \n                 \n            // id = id.push(res)\n            // console.log(state)\n            // console.log(res.data)\n            // console.log(\"cards data\")                         \n            // res.data.forEach((item, i) =>{      \n            //     // console.log(item._id)                               \n            //     id = id.concat(item._id)\n            //     temp_event.push(item)     \n                                              \n            //     // {temp_event.map((item)=> {                                                        \n            //     //     review = review.concat(t);\n            //     // })}\n            // })\n            //console.log(review)\n        })  \n        \n        return(\n            {state}\n        )\n    };  \n    // console.log(id)\n    // console.log(temp_event)\n    // console.log(state.data)\n    // let dataSearch = eventData.cardData.filter(item=>{\n    //     return Object.keys(item).some(key=>\n    //         item[key].toString().toLowerCase().includes(filter.toString().toLowerCase())\n    //         )\n    //     });\n    \n    // console.log(temp_event)\n    // const slice = Object.keys(temp_event).sort((a,b)=>a.label<b.label ? -1:1).slice(0,noOfElement);\n    // const slice = temp_event\n    // console.log(Object.keys(temp_event))\n    // console.log(review)\n    // console.log(t[0])\n    // console.log(temp_event  )\n    // const uniqueNames = Array.from(new Set(temp_event));\n    // console.log(uniqueNames)\n    // console.log(temp_event.filter(item => {        \n    //     return Object.keys(item).some(key=>                                        \n    //                 item[key].toString().toLowerCase()\n    //     )\n    // }    \n    // ))\n    // console.log(Object.entries(temp_event))\n    // temp_().map((item) => console.log(item));\n    // Object.keys(item).some(key=>\n    //             item[key].toString().toLowerCase().includes(filter.toString().toLowerCase())\n    // )\n\n     \n    \n    // console.log(temp_().keys[0])\n    // console.log(temp_event[0])\n    // {temp_().map(temp => {\n    //     conlos\n    // })}\n    // console.log(temp_().temp_event)\n    // console.log(temp_event.title)\n    // console.log(Object.keys(temp_event)[0])\n    // console.log(temp_event[Object.keys(temp_event)[0]])\n    // var person = temp_event\n    // var firstName = person[Object.keys(person)[0]]\n    // console.log(firstName)\n    // console.log(firstName[0])\n    // console.log(temp_event.map((item) => {\n    //     console.log('sdsd')\n    //     return item\n    // }))\n    \n    \n    // console.log(state.data)\n    // var data = Array.from(state.data)\n    return (\n        <>  \n            <div>\n                    <button><Link\n                        to='/add-event'\n                        className='add-event'\n                    >\n                        Add Event\n                    </Link></button>\n            </div>\n            <p>output</p>\n            <span>{temp_()[0]}</span>\n            \n            {state.data?.map(({_id, title, shortDesc, desc}) => {\n            // <li className=\"travelcompany-input\">\n            //     <span className=\"input-label\">{title }</span>\n                \n            // </li>\n            return(\n                <section className=\"py-4 py-lg-5 container\">\n                <div className=\"col-11 col-md-6 col-lg-3 mx-0 mb-4\" >\n                    <div className=\"card p-0 overflow-hidden h-100 shadow\">\n                        \n                        <figure className=\"cards__item__pic-wrap\" >\n                            <img src=\"https://images.pexels.com/photos/20787/pexels-photo.jpg?auto=compress&cs=tinysrgb&h=350\" alt=\"new\" className=\"cards__item__img\"/>\n                        </figure> \n\n                        <div className=\"card-body\">\n                            \n                            <h5 className=\"card-title\">{title}</h5>\n                            <p className=\"card-text\">{shortDesc}</p>\n                            {/* <button className=\"btn btn-outline-danger\" onClick={()=>getData(item.imgSrc, item.title, item.shortDes, item.desc, item.link, item.date)}>RSVP</button> */}\n                        </div>\n                        {/* <li class=\"list-group-item\">Events on {item.date}</li> */}\n                    </div>\n                </div>\n                </section>\n            )\n        })} \n                            \n        </> \n    )\n}\n\nexport default Cards"]},"metadata":{},"sourceType":"module"}